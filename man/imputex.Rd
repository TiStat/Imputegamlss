% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/imputex.R
\name{imputex}
\alias{imputex}
\title{Imputing censored covariates - GAMLSS}
\usage{
imputex(xmu_formula, xsigma_formula = ~1, xnu_formula = ~1,
  xtau_formula = ~1, xfamily = NO(mu.link = "identity"), data,
  indicator, censtype = c("missing", "right", "left", "interval"),
  intervalstart = NULL, m = 5, ...)
}
\arguments{
\item{xmu_formula}{formula for location parameter of xfamily. Dependent
variable specifys the variable which is partially censored/missing and is
to be imputed}

\item{xsigma_formula}{formula}

\item{xnu_formula}{formula}

\item{xtau_formula}{formula}

\item{xfamily}{gamlss family object.}

\item{data}{data.frame containing a dummy censoring indicator, 0 if not
censored/missing, 1 if censored/missing. Note that in case of right (left)
censoring, the censored variable contains the respective minmal (maximal)
duration of the followup which is used for conditional imputation. In case
of interval censored data, two columns are required; specifying the start
and end durations of the interval in question. This implementation assumes,
that the start duration is the observed time, in which no failure occured
before the interval is entered at which the exact point of the observed
state change is unknown. For inverse sampling, the distribution is
conditoned on the start duration and cut at the end duration to ensure the
constrained.}

\item{indicator}{character. Name of dummy column in data, which indicates the
damaged observation.}

\item{censtype}{character. type of the damaged observation 'missing',
'right', 'left' or 'interval'}

\item{intervalstart}{character. Name of the column of interval starting
values. by convention, the starting duration in this column is assumed to
be the time passed without failure, before entering the interval, in which
the exact time of failure is unknown.}

\item{m}{Number of imputations. Default is m = 5}

\item{...}{additional arguments passed in all gamlss fit.}
}
\value{
Returns internal results of the algorithm.
}
\description{
The MICE Algorithm (Multiple Imputation by Chained Equations) is
  a method to impute missing data. This function uses this algorithm for
  imputing censored data, using inverse sampling to utilize the additional
  information.
}
\examples{
missing = simulateData(n = 100, param.formula = list(mu = ~exp(x1) + x3,
sigma = ~sin(x2)), variablenames =  c('x1', 'x2'), defect = ~ x1 > 0.6 | 0.8
| NA, family = 'NO') 
imputex(data = missing$defected, xmu_formula= x1~y+x3,
xsigma_formula = ~x2, xnu_formula = ~1, xtau_formula = ~1, xfamily =
NO(mu.link = 'identity'), indicator = "indicator", censtype= 'missing' )
}
